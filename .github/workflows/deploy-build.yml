name: Deploy Build

on:
  workflow_run:
    workflows: ["Update Build Version"]
    types: [completed]

env:
  LATEST_IMAGE: ${{ secrets.DOCKER_REPO_URL }}:latest-${{ github.sha }}

jobs:
  create-image:
    runs-on: ubuntu-latest

    env:
      TOKEN: ${{ secrets.ENVIRONMENT_REPO_ACCESS_TOKEN }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.LATEST_IMAGE }}

  EC2-deploy:
    needs: create-image
    runs-on: ubuntu-latest

    env:
      ENV_CONFIG_PATH: envs/testing/
      ENV_CONFIG_FILE: settings.yml
      PATH_SOURCE_CHECKOUT: temp_folder
      CONTAINER_NAME: portfolio
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      EC2_IP: ${{ secrets.EC2_DEV_IP }}

    steps:
      - name: setup yq
        uses: mikefarah/yq@master

      - name: checkout settings file
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.ENVIRONMENT_REPO_URL }}
          path: ${{ env.PATH_SOURCE_CHECKOUT }}
          ref: "main"

      - name: get port and protocol settings
        run: |
          cd $PATH_SOURCE_CHECKOUT
          cd $ENV_CONFIG_PATH
          BASE_SETTINGS=$(yq '.resources' $ENV_CONFIG_FILE)
          PORT=$(yq '.deployment.ports.port' $BASE_SETTINGS)
          NETWORK_PROTOCOL=$(yq '.deployment.ports.protocol' $BASE_SETTINGS)
          FULL_DOCKER_CONTAINER_PORT_ARG=127.0.0.1:80:${PORT}/${NETWORK_PROTOCOL}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set permissions for private key
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
        env:
          SSH_KEY: ${{ secrets.DEV_SSH_PRIVATE_KEY }}

      - name: pull docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USERNAME@$EC2_IP "sudo docker pull $LATEST_IMAGE"

      - name: stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USERNAME@$EC2_IP "sudo docker stop $CONTAINER_NAME || true"
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USERNAME@$EC2_IP "sudo docker rm $CONTAINER_NAME || true"

      - name: run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USERNAME@$EC2_IP "sudo docker run --name $CONTAINER_NAME -d -e PORT=$PORT -p $FULL_DOCKER_CONTAINER_PORT_ARG $LATEST_IMAGE"
